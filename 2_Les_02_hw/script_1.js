'use strict';

//пример 1
let a = 1, b = 1, c, d;
// С помощью let объявляются переменные a, b, c, d.
// Причем для a и для b определены значения, а для c и d - undefined (не определены)
c = ++a;
// Перед переменной a стоит инкремент ++ в препозиции (префикс)
// Это означает, что сперва будет выполнено увеличение a на 1, и только потом это значение будет присвоено c
// ++a = ++1 = 1+1 = 2
// Поэтому c=2
alert(c); // ответ: 2

// -------------------------------------------------------------------------------------------------------------------

//пример 2
d = b++;
alert(d); //ответ: 1

// В этом примере инкремент стоит в пост-позиции (постфикс)
// Поэтому переменной 1) сперва будет присвоено значение b (по условию b=1) и
// только затем 2) переменная b будет увеличена на 1.
// Через alert выводится переменная d, поэтому ответ 1.
// Если через alert вывести переменную b, то выведется 2.

// -------------------------------------------------------------------------------------------------------------------

//пример 3
c = 2 + ++a;
alert(c); //ответ: 5

// Не смотря на то, что сейчас переменная c=2, ей будет присвоено новое значение, т.к.
// ассоциативность для присваивания = определяет порядок справа-налево
// Переменная a сейчас равна 2 (была изначально равна 1, а затем была через ++a увеличена на 1)
// Инкремент ++ стоит в префиксе, поэтому a=2 будет еще увеличена на 1 и a станет равно 3 (a=3)
// Затем произойдет сложение 2+3 = 5 и это значение будет справа-налево присвоено переменной c

// -------------------------------------------------------------------------------------------------------------------

//пример 4
d = 2 + b++;
alert(d); //ответ: 4

// К текущему моменту переменная d=1, а переменная b=2
// Поскольку инкремент ++ стоит в постфиксе, поэтому 1) сперва произойдет сложение 2 + текущее b
// 2) затем будет присвоено новое значение d и 
// 3) затем b будет увеличена на 1
// То есть d = 2+2 = 4  , а переменная b=2++ = 2+1 = 3

alert(a); //3
// Здесь будет выведена 3, т.к. после Примера №3 сейчас a=3
alert(b); //3
// Здесь будет выведена 3, т.к. после Примера №4 сейчас b=3